diff --git a/mozmill/extension/content/css/mozmill.css b/mozmill/extension/content/css/mozmill.css
index d36a5cd..1c3e219 100644
--- a/mozmill/extension/content/css/mozmill.css
+++ b/mozmill/extension/content/css/mozmill.css
@@ -7,6 +7,37 @@ ul#icons {margin: 0; padding: 0;}
 ul#icons li {margin: 2px; position: relative; padding: 4px 0; float: left;  list-style: none;}
 ul#icons span.ui-icon {float: left; margin: 0 4px;}
 
+#mozmillIcon { margin-right: 6px; margin-bottom: 6px;}
+
+#dxContainer {margin-top: 16px; height: 140px;}
+
+#inspectOptions {margin-right: 10px;}
+
+#dxToggle {font-size: 12px;}
+
+#outClear {margin-left: 20px;}
+
+#recordToggle { position: relative; top: -3px; font-size: 12px;}
+
+#outClear { position: relative; top: -3px;}
+
+.menu { width:100%;font-size:12px; cursor: pointer; padding-top: 2px; padding-left: 4px; padding-right: 4px;}
+
+.menuitem { cursor: pointer; padding-top: 2px; font-size: 12px; padding-bottom: 2px;}
+
+.menuitem:hover { background-color: #E7E7E7;}
+
+#shellInput {
+  width: 99%;
+  height: 50px;
+}
+
+#shellOutput {
+  overflow: auto;
+  width: 99%;
+  border: 1px solid #aaa;
+}
+
 .log,
 .logger,
 .pass,
@@ -33,4 +64,4 @@ ul#icons span.ui-icon {float: left; margin: 0 4px;}
 }
 .logger {
   background:lightyellow;
-}
\ No newline at end of file
+}
diff --git a/mozmill/extension/content/dx.js b/mozmill/extension/content/dx.js
index ce36a17..b0a8e65 100644
--- a/mozmill/extension/content/dx.js
+++ b/mozmill/extension/content/dx.js
@@ -48,17 +48,13 @@ DomInspectorConnector.prototype.grab = function(){
   var disp = $('dxDisplay').textContent;
   var dispArr = disp.split(': ');
   $('editorInput').value += 'new elementslib.'+dispArr[0].toUpperCase()+"('"+dispArr[1]+"')\n";
-}  
+}
 
 DomInspectorConnector.prototype.changeClick = function(e) {
   if (this.on){
     this.dxOff()
     this.dxOn();
   }
-  else {
-    this.dxOff();
-  }
-
 }
 
 DomInspectorConnector.prototype.evtDispatch = function(e) {
@@ -93,40 +89,31 @@ DomInspectorConnector.prototype.evtDispatch = function(e) {
   return dxE;
 }
 DomInspectorConnector.prototype.dxToggle = function(){
-  if (this.on){
+  if (this.on)
     this.dxOff();
-    $("#inspectDialog").dialog().parents(".ui-dialog:first").find(".ui-dialog-buttonpane button")[2].innerHTML = "Start";
-  }
-  else{
+  else
     this.dxOn();
-    $("#inspectDialog").dialog().parents(".ui-dialog:first").find(".ui-dialog-buttonpane button")[2].innerHTML = "Stop";
-  }
 }
 //Turn on the recorder
 //Since the click event does things like firing twice when a double click goes also
 //and can be obnoxious im enabling it to be turned off and on with a toggle check box
 DomInspectorConnector.prototype.dxOn = function() {
   this.on = true;
-  $("#inspectDialog").dialog().parents(".ui-dialog:first").find(".ui-dialog-buttonpane button")[2].innerHTML = "Stop";
-  document.getElementById('eventsOut').value = "";
-  //document.getElementById('inspectClickSelection').disabled = true;
-  //$('domExplorer').setAttribute('label', 'Disable Inspector');
+  $("#dxToggle").text("Stop");
+
   //defined the click method, default to dblclick
   var clickMethod = "dblclick";
   if (document.getElementById('inspectSingle').checked){
     clickMethod = 'click';
   }
-  //document.getElementById('dxContainer').style.display = "block";
-  //var w = Components.classes['@mozilla.org/appshell/window-mediator;1'].getService(Components.interfaces.nsIWindowMediator).getMostRecentWindow('');
+
   var enumerator = Components.classes["@mozilla.org/appshell/window-mediator;1"]
                      .getService(Components.interfaces.nsIWindowMediator)
                      .getEnumerator("");
   while(enumerator.hasMoreElements()) {
     var win = enumerator.getNext();
-    //if (win.title != 'Error Console' && win.title != 'MozMill IDE'){
     if (win.document.title != 'MozMill IDE'){
       this.dxRecursiveBind(win, clickMethod);
-      //win.focus();
     }
   }
 
@@ -151,25 +138,14 @@ DomInspectorConnector.prototype.observer = {
 
 DomInspectorConnector.prototype.dxOff = function() {
   this.on = false;
-  $("#inspectDialog").dialog().parents(".ui-dialog:first").find(".ui-dialog-buttonpane button")[2].innerHTML = "Start";
-  //document.getElementById('inspectClickSelection').disabled = false;
+  $("#dxToggle").text("Start");
+  $("#dxCopy").show();
 
   //try to cleanup left over outlines
   if (this.lastEvent){
-    this.lastEvent.target.style.border = "";
-  }
-  
-  //defined the click method, default to dblclick
-  var clickMethod = "dblclick";
-  if (document.getElementById('inspectSingle').checked){
-    clickMethod = 'click';
+    this.lastEvent.target.style.outline = "";
   }
   
-  //because they share this box
-  var copyOutputBox = $('copyout');
-  //$('domExplorer').setAttribute('label', 'Enable Inspector');
-  //$('dxContainer').style.display = "none";
-  //var w = Components.classes['@mozilla.org/appshell/window-mediator;1'].getService(Components.interfaces.nsIWindowMediator).getMostRecentWindow('');
   for each(win in utils.getWindows()) {
     this.dxRecursiveUnBind(win, 'click');
   }
@@ -178,7 +154,6 @@ DomInspectorConnector.prototype.dxOff = function() {
     this.dxRecursiveUnBind(win, 'dblclick');
   }
   
-
   var observerService =
     Components.classes["@mozilla.org/observer-service;1"]
       .getService(Components.interfaces.nsIObserverService);
@@ -186,12 +161,11 @@ DomInspectorConnector.prototype.dxOff = function() {
   try { 
     observerService.removeObserver(this.observer, "toplevel-window-ready");
   } catch(err){}
-
 };
 
 DomInspectorConnector.prototype.getFoc = function(e){
-  MozMilldx.dxToggle();
-  e.target.style.border = "";
+  MozMilldx.dxOff();
+  e.target.style.outline = "";
   e.stopPropagation();
   e.preventDefault();
   window.focus();
@@ -209,37 +183,8 @@ DomInspectorConnector.prototype.clipCopy = function(e){
    else if (e.altKey && e.shiftKey && (e.charCode == 199)){
      copyToClipboard($('#dxElement')[0].innerHTML + ' '+$('#dxValidation')[0].innerHTML + ' ' + $('#dxController')[0].innerHTML);
    }
-   else {
-     window.document.getElementById('eventsOut').value += "-----\n";
-     window.document.getElementById('eventsOut').value += "Shift Key: "+ e.shiftKey + "\n";
-     window.document.getElementById('eventsOut').value += "Control Key: "+ e.ctrlKey + "\n";
-     window.document.getElementById('eventsOut').value += "Alt Key: "+ e.altKey + "\n";
-     window.document.getElementById('eventsOut').value += "Meta Key: "+ e.metaKey + "\n\n";
-     
-     //we need some code here to map keyCodes to the desired mozilla VK_WHATEVER
-     //and substituting that in for e.charCode in the following concat.
-     
-     var ctrlString = "";
-     ctrlString += MozMilldx.evtDispatch(e);
-     ctrlString += "\nController: controller.keypress(element,"+e.charCode+",";
-     ctrlString += "{";
-     if (e.ctrlKey){
-       ctrlString += "ctrlKey:"+e.ctrlKey.toString()+",";
-     }
-     if (e.altKey){
-       ctrlString += "altKey:"+e.altKey.toString()+",";
-     }
-     if (e.shiftKey){
-       ctrlString += "shiftKey:"+e.shiftKey.toString()+",";
-     }
-     if (e.metaKey){
-       ctrlString += "metaKey:"+e.metaKey.toString();
-     }
-     ctrlString += "});\n";
-     ctrlString = ctrlString.replace(/undefined/g, "false");         
-     document.getElementById('eventsOut').value += ctrlString;
-   }
 }
+
 //Recursively bind to all the iframes and frames within
 DomInspectorConnector.prototype.dxRecursiveBind = function(frame, clickMethod) {
   //Make sure we haven't already bound anything to this frame yet
@@ -255,49 +200,26 @@ DomInspectorConnector.prototype.dxRecursiveBind = function(frame, clickMethod) {
   var iframeArray = frame.window.frames;
 
   for (var i = 0; i < iframeCount; i++)
-  {
-      try {
-        iframeArray[i].addEventListener('mouseover', this.evtDispatch, true);
-        iframeArray[i].addEventListener('mouseout', this.evtDispatch, true);
-        iframeArray[i].addEventListener(clickMethod, this.getFoc, true);
-        iframeArray[i].addEventListener('keypress', this.clipCopy, true);
-        
-
-        this.dxRecursiveBind(iframeArray[i], clickMethod);
-      }
-      catch(error) {
-          //mozmill.results.writeResult('There was a problem binding to one of your iframes, is it cross domain?' + 
-          //'Binding to all others.' + error);
-
-      }
-  }
+    this.dxRecursiveBind(iframeArray[i], clickMethod);
 }
+
 //Recursively bind to all the iframes and frames within
 DomInspectorConnector.prototype.dxRecursiveUnBind = function(frame, clickMethod) {
-  frame.removeEventListener('mouseover', this.evtDispatch, true);
-  frame.removeEventListener('mouseout', this.evtDispatch, true);
-  frame.removeEventListener(clickMethod, this.getFoc, true);
-  frame.removeEventListener('keypress', this.clipCopy, true);
-  
+  try {
+    frame.removeEventListener('mouseover', this.evtDispatch, true);
+    frame.removeEventListener('mouseout', this.evtDispatch, true);
+    frame.removeEventListener(clickMethod, this.getFoc, true);
+    frame.removeEventListener('keypress', this.clipCopy, true);
+  }
+  catch(e) {
+    // don't want to prevent the rest of the frames from removing listeners
+  }
   
   var iframeCount = frame.window.frames.length;
   var iframeArray = frame.window.frames;
 
   for (var i = 0; i < iframeCount; i++)
-  {
-      try {
-        iframeArray[i].removeEventListener('mouseover', this.evtDispatch, true);
-        iframeArray[i].removeEventListener('mouseout', this.evtDispatch, true);
-        iframeArray[i].removeEventListener(clickMethod, this.getFoc, true);
-        iframeArray[i].removeEventListener('keypress', this.clipCopy, true);
-
-        this.dxRecursiveUnBind(iframeArray[i], clickMethod);
-      }
-      catch(error) {
-          //mozmill.results.writeResult('There was a problem binding to one of your iframes, is it cross domain?' + 
-          //'Binding to all others.' + error);
-      }
-  }
+    this.dxRecursiveUnBind(iframeArray[i], clickMethod);
 }
 
 var MozMilldx = new DomInspectorConnector();
@@ -308,4 +230,4 @@ var enableDX = function () {
 }
 var disableDX = function () {
   MozMilldx.dxOff();
-}
\ No newline at end of file
+}
diff --git a/mozmill/extension/content/mozmill.html b/mozmill/extension/content/mozmill.html
index 0a7d417..8eb6e1e 100644
--- a/mozmill/extension/content/mozmill.html
+++ b/mozmill/extension/content/mozmill.html
@@ -16,106 +16,53 @@
   <script src="dx.js"></script>
   <script src="rec.js"></script>
   <script src="menus.js"></script>
-    
-	<script src="jquery/jquery-1.3.2.min.js"></script>
-	<script src="jquery/jquery-ui-1.7.1.custom.min.js"></script>
-	<script src="ui.js"></script>
+
+  <script src="jquery/jquery-1.3.2.min.js"></script>
+  <script src="jquery/jquery-ui-1.7.1.custom.min.js"></script>
+  <script src="ui.js"></script>
   <script src="editarea/edit_area/edit_area_loader.js"></script>
+
+   <script src="jquery/fg.menu.js"></script>
+   <link type="text/css" href="css/fg.menu.css" rel="Stylesheet" />
+
 </head>
-<body style="background:white;" onunload="cleanUp();">
+<body onunload="cleanUp();">
   <script src="shortcuts.js"></script>
   <script type="text/javascript">
   	var syncHeights = function(){
   	    $('#tabs')[0].style.height = window.innerHeight - 90 + "px";
-        if ($('#editorInput')[0].style.height != window.innerHeight - 170 + "px"){
+        if ($('#editorInput')[0].style.height != window.innerHeight - 180 + "px"){
           if ( $('#tabs').tabs("option","selected") == 0 ){
             editAreaLoader.toggle("editorInput");
-            $('#editorInput')[0].style.height = window.innerHeight - 170 + "px";
+            $('#editorInput')[0].style.height = window.innerHeight - 180 + "px";
             editAreaLoader.toggle("editorInput");
           }
         }
         $('#editorInput')[0].style.height = window.innerHeight - 170 + "px";
-        $('#eventsOut')[0].style.height = window.innerHeight - 200 + "px";
         $('#resOut')[0].style.height = window.innerHeight - 170 + "px";
         $('#shellOutput')[0].style.height = window.innerHeight - 220 + "px";
   	}
   	
   	$(function() {
-  		$("#tabs").tabs();
-  		$('#tabs').bind('tabsshow', function(event, ui) {
-        syncHeights();
-        if ( $('#tabs').tabs("option","selected") == 0 ){
-          editAreaLoader.toggle("editorInput");
-          $('#editorInput')[0].style.height = window.innerHeight - 170 + "px";
-          editAreaLoader.toggle("editorInput");
-        }
-      });
-      
-  	  $("#inspectDialog").dialog({
-  		  autoOpen: false,
-        height: 450,
-        width: 400,
-        modal:true,
-        overlay: { 
-            opacity: 0.5, 
-            background: "black" 
-        },
-        buttons: { 
-          "Close": function() {
-            jQuery(this).dialog("close");
-            MozMilldx.dxOff();
-            
-          },
-          "Send to Clipboard": function() {
-            MozMilldx.inspectorToClipboard();
-            $("#inspectDialog").dialog('close');
-            $("#tabs").tabs().tabs("select", 0);
-            $('#textarea')[0].focus();
-          },
-          "Stop": function() {
-            MozMilldx.dxToggle();
-          }
-        }
-      });
-      
-      //turning off inspector on escape
-      $("#inspectDialog").bind('dialogclose', function(event, ui) {
-        MozMilldx.dxOff();
-      });
-  	
-		  $("#fileDialog").dialog({
-  		  autoOpen: false,
-        height: 170,
-        width: 400,
-        modal:true,
-        resizable:false,
-        overlay: { 
-            opacity: 0.5, 
-            background: "black" 
-        },
-        buttons: { 
-         "Close": function() { 
-             jQuery(this).dialog("close");
-         } 
-        }
-      });
-    
-      $("#testDialog").dialog({
-  		  autoOpen: false,
-        height: 170,
-        width: 400,
-        modal:true,
-        resizable:false,
-        overlay: { 
-            opacity: 0.5, 
-            background: "black" 
-        },
-        buttons: { 
-         "Close": function() { 
-             jQuery(this).dialog("close"); 
-         } 
-        }
+      $("#tabs").tabs();
+      $('#tabs').bind('tabsshow', function(event, ui) {
+         syncHeights();
+         if ( $('#tabs').tabs("option","selected") == 0 ){
+           editAreaLoader.toggle("editorInput");
+           $('#editorInput')[0].style.height = window.innerHeight - 170 + "px";
+           editAreaLoader.toggle("editorInput");
+         }
       });
+
+   /* $('#fileMenu').menu({ 
+        content: $('#fileMenulist').html(), // grab content from this page
+        showSpeed: 200 
+     });
+
+     $('#runMenu').menu({ 
+        content: $('#runMenulist').html(), // grab content from this page
+        showSpeed: 200 
+     }); */
     
       $("#optionDialog").dialog({
   		  autoOpen: false,
@@ -134,160 +81,115 @@
         }
       });
     
-      $("#recordDialog").dialog({
-  		  autoOpen: false,
-        height: 160,
-        width: 400,
-        modal:true,
-        overlay: { 
-            opacity: 0.5, 
-            background: "black" 
-        },
-        buttons: { 
-          "Close": function() { 
-            jQuery(this).dialog("close");
-          },   
-          "Stop": function() { 
-            MozMillrec.toggle();
-          }
-        }
-      });
-      
-      $("#recordDialog").bind('dialogclose', function(event, ui) {
-        if (MozMillrec.ison){
-          MozMillrec.off();
-        }
-      });
 	});
   </script>
 
     <div style="position:absolute;width:98%;height:98%;overflow:hidden;">
-      
-      <image src="img/wmIcon.png" style="float:right"/>
+      <div id="topBox">
+      <a href="https://developer.mozilla.org/en/Mozmill" target=_blank style="float:right;">
+         <image id="mozmillImage" src="img/wmIcon40.png" style="border:none;"/>
+      </a>
       <div id="statusMessage" style="height:40px;">
         <span><strong>Status:</strong></span>
         <span id="runningStatus">Ready...</span>
       </div>
-      <div style="width:100%;text-align:right;font-size:12px;">
-        <span style="cursor:pointer" onclick="showFileDialog();"><u>F</u>ile</span> | 
-        <span style="cursor:pointer" onclick="showTestDialog();"><u>T</u>est</span> | 
-        <span style="cursor:pointer" onclick="showOptionDialog();">O<u>p</u>tions</span> | 
-        <span style="cursor:pointer" onclick="showInspectDialog();"><u>I</u>nspector</span> | 
-        <span style="cursor:pointer" onclick="showRecordDialog();">Recor<u>d</u>er</span> |
+      <div class="ui-helper-hidden" style="width:100%;text-align:right;font-size:12px;">
+        <span style="cursor:pointer" onclick="showOptionDialog();">O<u>p</u>tions</span> |
         <a style="cursor:pointer" href="https://developer.mozilla.org/en/Mozmill" target=_blank>Help</a>
       </div>
+     </div>
       <div id="tabs" style="position:relative;width:98%;height:90%">
       	<ul>
       		<li><a id="editorTab" href="#tabs-1">Editor</a></li>
       		<li><a id="outputTab" href="#tabs-2">Output</a></li>
-      		<li><a id="eventsTab" href="#tabs-3">Events</a></li>
+      		<li><a id="eventsTab" href="#tabs-3">Inspector</a></li>
       		<li><a id="shellTab" href="#tabs-4">Shell</a></li>
       	</ul>
       	<div id="tabs-1">
-      		<p>
-      		  <textarea id="editorInput" value="" style="font-family:monospace;font-size:12px;width:100%"></textarea>
-      		</p>
+
+          <span tabindex="0" class="menu" id="fileMenu"><u>F</u>ile</span>
+          <div style="display:none;">
+            <ul id="fileMenulist">
+              <li class="menuitem" onclick="openFile();"><u>O</u>pen</li>
+              <li class="menuitem" onclick="newFile();"><u>N</u>ew</li>
+              <li class="menuitem" onclick="genBoiler();">New from <u>T</u>emplate</li>
+              <li class="menuitem" onclick="saveFile();"><u>S</u>ave</li>
+              <li class="menuitem" onclick="saveAsFile();">Save <u>A</u>s</li>
+              <li class="menuitem" onclick="closeFile();"><u>C</u>lose Current File</li>
+              </ul>
+            </div>
+          <span tabindex="0" class="menu" id="runMenu"><u>R</u>un</span>
+          <div style="display:none;">
+            <ul id="runMenulist">
+              <li class="menuitem" onclick="runEditor();"><u>E</u>ditor</li>
+              <li class="menuitem" onclick="runFile();"><u>F</u>rom File</li>
+              <li class="menuitem" onclick="runDirectory();">From <u>D</u>irectory</li>
+              </ul>
+            </div>
+          <button id="recordToggle" style="float:right;" class="ui-state-default ui-corner-all" onclick="MozMillrec.toggle();">Record</button>
+
+          <textarea id="editorInput" value="" style="font-family:monospace;font-size:12px;width:100%"></textarea>
       	</div>
       	<div id="tabs-2">
-      		<p>
-      		  <div id="resOut" style="overflow:auto;position:absolute;height:90%;width:98%"></div>
-      		</p>
+          <div id="outOptions" >
+            <span id="outToggles">
+              Pass:<input id="outPass" label="Pass" type=checkbox checked onchange="updateOutput();"/>
+              Fail:<input id="outFail" label="Fail" type=checkbox checked onchange="updateOutput();"/>
+              Test:<input id="outTest" label="Test" type=checkbox checked onchange="updateOutput();"/>
+            </span>
+           <button id="outClear" style="float:right;" class="ui-state-default ui-corner-all" onclick="logicalClear();">C<u>l</u>ear</button></div>
+          <p>
+            <div id="resOut" style="overflow:auto;position:absolute;height:90%;width:98%"></div>
+      	  </p>
       	</div>
       	<div id="tabs-3">
-      		<p>
-      		  <textarea id="eventsOut" value="" style="width:99%;"></textarea>
-      		</p>
-      	</div>
-      	<div id="tabs-4">
-      		<p>
-            <textarea id="shellInput" style="width:99%;height:50px">Type commands here...</textarea>
-            <div id="shellOutput" style="overflow:auto;width:99%;border:1px solid #aaa">
-              
-            </div>
-      		</p>
-      	</div>
-      </div>
-    
-      <div id="inspectDialog" title="Inspector">
-      	<p>
-      	  <div style="float:right;">
-      	      Double: <input id="inspectDouble" type="radio" name="inspectClickSelection" value="double" onclick="MozMilldx.changeClick();" checked>
-              Single: <input id="inspectSingle" type="radio" name="inspectClickSelection" onclick="MozMilldx.changeClick();" value="single">
-      	  </div><br>
-      	  <div id="dxContainer" style="padding:3px;">
-            <strong>Element</strong>::
+      	    <div id="dxOptions" style="float:right;">
+      	        Double Click: <input id="inspectDouble" type="radio" name="inspectClickSelection" value="double" onclick="MozMilldx.changeClick();" checked>
+                Single Click: <input id="inspectSingle" type="radio" name="inspectClickSelection" onclick="MozMilldx.changeClick();" value="single">
+      	    </div>
+          <br>
+      	  <div id="dxContainer">
+            <strong>Element</strong>:
             <span ondblclick="copyToClipboard(this.textContent);" id="dxElement"></span>
             <br>
-            <strong>Controller</strong>::
+            <strong>Controller</strong>:
             <span ondblclick="copyToClipboard(this.textContent);" id="dxController"></span>
             <br>
-            <strong>Validation</strong>::
+            <strong>Validation</strong>:
             <span ondblclick="copyToClipboard(this.textContent);" id="dxValidation"></span>
           </div>
+          <div id="dxButtons">
+            <button id="dxToggle" class="ui-state-default ui-corner-all ui-priority-primary" onclick="MozMilldx.dxToggle();">Start</button>
+            <button id="dxCopy" class="ui-state-default ui-corner-all ui-helper-hidden" onclick="copyInspector();">Send To Clipboard</button>
+          </div>
       	</p>
+      	</div>
+      	<div id="tabs-4">
+      		<p>
+            <textarea id="shellInput">Type commands here...</textarea>
+              <div id="shellOutput">
+              </div>
+      		</p>
+      	</div>
+      </div>
+
+      <div id="inspectDialog" title="Inspector">  	
       </div>
       
       <div id="fileDialog" title="File Options">
-      	<p>
-      	  <center>
-      	    <button class="ui-state-default ui-corner-all" onclick="newFile();$('#fileDialog').dialog('close');">
-        	    New <u>B</u>lank
-        	  </button>
-        	  <button class="ui-state-default ui-corner-all" onclick="genBoiler();$('#fileDialog').dialog('close');">
-        	    New from Te<u>m</u>plate
-        	  </button>
-        	  <button class="ui-state-default ui-corner-all" onclick="openFile();$('#fileDialog').dialog('close');">
-        	    <u>O</u>pen
-        	  </button>
-        	  <br><br>
-            <button class="ui-state-default ui-corner-all" onclick="saveFile();$('#fileDialog').dialog('close');">
-              <u>S</u>ave
-            </button>
-        	  <button class="ui-state-default ui-corner-all" onclick="saveAsFile();$('#fileDialog').dialog('close');">
-        	    Sav<u>e</u> As
-        	  </button>
-        	  <button class="ui-state-default ui-corner-all" onclick="closeFile();$('#fileDialog').dialog('close');">
-        	    Close (<b>w</b>)
-        	  </button>
-        	</center>
-      	</p>
       </div>
       
       <div id="testDialog" title="Test Options">
-      	<p>
-      	  <center>
-      	  <button class="ui-state-default ui-corner-all" onclick="runEditor();$('#testDialog').dialog('close');">
-      	    <u>R</u>un Editor
-      	  </button>
-      	  <button class="ui-state-default ui-corner-all" onclick="runFile();$('#testDialog').dialog('close');">
-      	    Run File
-      	  </button>
-      	  <button class="ui-state-default ui-corner-all" onclick="runDirectory();$('#testDialog').dialog('close');">
-      	    Run Directory
-      	  </button>
-          </center>
-      	</p>
+
       </div>
       
       <div id="optionDialog" title="Options">
       	<p>
-      	  <h3>Display</h3>
-              Pass:<input id="outPass" label="Pass" type=checkbox checked onchange="updateOutput();"/>
-              Fail:<input id="outFail" label="Fail" type=checkbox checked onchange="updateOutput();"/>
-              Test:<input id="outTest" label="Test" type=checkbox checked onchange="updateOutput();"/>
-      	</p>
-      	
-      	<p>
-      	  <h3>Functions</h3>
-      	    <button class="ui-state-default ui-corner-all" onclick="logicalClear();">Clear Output (<b>l</b>)</button>
       	    <button class="ui-state-default ui-corner-all" onclick="align();">Ali<b>g</b>n Windows</button>
       	</p>
       </div>
       
       <div id="recordDialog" title="Recorder">
-      	<p>
-      	  <h3>Use the buttons below to start and stop recording!</h3>
-      	</p>
       </div>
       
     </div>
diff --git a/mozmill/extension/content/output.js b/mozmill/extension/content/output.js
index 0ab3481..6dd678f 100644
--- a/mozmill/extension/content/output.js
+++ b/mozmill/extension/content/output.js
@@ -204,4 +204,4 @@ function removeStateListeners(){
     frame.events.removeListener(failListener);
     frame.events.removeListener(logListener);
     frame.events.removeListener(loggerListener);
-}
\ No newline at end of file
+}
diff --git a/mozmill/extension/content/overlay.js b/mozmill/extension/content/overlay.js
index 499817f..79018e8 100755
--- a/mozmill/extension/content/overlay.js
+++ b/mozmill/extension/content/overlay.js
@@ -83,4 +83,4 @@ function mozMillTestWindow() {
 //   if ((e.charCode == 109) && (e.ctrlKey)) { 
 //     MozMill.onMenuItemCommand(e); 
 //   } 
-// }, false);
\ No newline at end of file
+// }, false);
diff --git a/mozmill/extension/content/rec.js b/mozmill/extension/content/rec.js
index f49cbdd..db5b05d 100644
--- a/mozmill/extension/content/rec.js
+++ b/mozmill/extension/content/rec.js
@@ -205,13 +205,10 @@ var RecorderConnector = function() {
 }
 
 RecorderConnector.prototype.toggle = function(){
-  if (this.ison){
+  if (this.ison)
     this.off();
-    $("#recordDialog").dialog().parents(".ui-dialog:first").find(".ui-dialog-buttonpane button")[1].innerHTML = "Start";
-  } else { 
-    this.on(); 
-    $("#recordDialog").dialog().parents(".ui-dialog:first").find(".ui-dialog-buttonpane button")[1].innerHTML = "Stop";
-  }
+  else
+    this.on();
 };
 
 RecorderConnector.prototype.dispatch = function(evt){
@@ -225,28 +222,16 @@ RecorderConnector.prototype.dispatch = function(evt){
 
 //Recursively bind to all the iframes and frames within
 RecorderConnector.prototype.bindListeners = function(frame) {
-  //Make sure we haven't already bound anything to this frame yet
-  this.unbindListeners(frame);
-  
   frame.addEventListener('click', this.dispatch, false);
   frame.addEventListener('dblclick', this.dispatch, false);
   frame.addEventListener('change', this.dispatch, false);
   frame.addEventListener('keypress', this.dispatch, false);
-  
+
   var iframeCount = frame.window.frames.length;
   var iframeArray = frame.window.frames;
 
   for (var i = 0; i < iframeCount; i++)
-  {
-      try {
-        iframeArray[i].addEventListener('click', this.dispatch, false);
-        iframeArray[i].addEventListener('dblclick', this.dispatch, false);
-        iframeArray[i].addEventListener('change', this.dispatch, false);
-        iframeArray[i].addEventListener('keypress', this.dispatch, false);
-        this.bindListeners(iframeArray[i]);
-      }
-      catch(error) {}
-  }
+    this.bindListeners(iframeArray[i]);
 }
 
 //Recursively bind to all the iframes and frames within
@@ -263,16 +248,7 @@ RecorderConnector.prototype.unbindListeners = function(frame) {
   var iframeArray = frame.window.frames;
 
   for (var i = 0; i < iframeCount; i++)
-  {
-      try {
-        iframeArray[i].removeEventListener('click', this.dispatch, false);
-        iframeArray[i].removeEventListener('dblclick', this.dispatch, false);
-        iframeArray[i].removeEventListener('change', this.dispatch, false);
-        iframeArray[i].removeEventListener('keypress', this.dispatch, false);
-        this.unbindListeners(iframeArray[i]);
-      }
-      catch(error) {}
-  }
+    this.unbindListeners(iframeArray[i]);
 }
 
 //When a new win dom window gets opened
@@ -288,19 +264,12 @@ RecorderConnector.prototype.observer = {
 
 RecorderConnector.prototype.on = function() {
   this.ison = true;
-  //Bind
-  // if (($('saveMenu').getAttribute("disabled") != "true" && 
-  //       window.document.getElementById('editorInput').value != '') || (
-  //       window.document.getElementById('editorInput').value != '' &&
-  //       window.openFn == null)){
-  //     var confirmation = confirm('You have unsaved code in the test editor. The Recorder will replace the test you currently have in the test editor if you decide to continue. Would you like to continue regardless?');
-  //   } else {
-  //     var confirmation = true;
-  //   }
-  //   
-  //   if (!confirmation) { return false;}
-  //$('saveMenu').setAttribute("disabled", "true"); 
-//  $('editorMessage').innerHTML = "Use the 'File' menu to open a test, or generate and save a new one..";
+
+  // update UI
+  $("#recordToggle").text("Stop Recording");
+  $("#recordToggle").addClass("ui-state-highlight");
+  $("#recordToggle").addClass("ui-priority-primary");
+
   window.openFn = utils.tempfile().path;
   editAreaLoader.openFile('editorInput', {text:'',title:getFileName(window.openFn),id:window.openFn});
   window.openFn = null;
@@ -310,8 +279,7 @@ RecorderConnector.prototype.on = function() {
       this.bindListeners(win);
     }
   }
-  //Update UI
-  //$('recorder').setAttribute('label', 'Stop');
+
   var mmWindows = utils.getWindows('navigator:browser');
   if (mmWindows.length != 0){
     mmWindows[0].focus();
@@ -325,19 +293,23 @@ RecorderConnector.prototype.on = function() {
   observerService.addObserver(this.observer, "toplevel-window-ready", false);
   
   currentRecorderArray = [];
-  //window.document.getElementById('editorInput').value = '';
   editAreaLoader.setValue('editorInput', '');
 };
 
 RecorderConnector.prototype.off = function() {
   this.ison = false;
-  //Bind
+
+  //update UI
+  $("#recordToggle").text("Record");
+  $("#recordToggle").removeClass("ui-state-highlight");
+  $("#recordToggle").removeClass("ui-priority-primary");
+
+  
   for each(win in utils.getWindows()) {
     this.unbindListeners(win);
   }
-  //$('recorder').setAttribute('label', 'Record');
   var r = getRecordedScript(currentRecorderArray);
-  //window.document.getElementById('editorInput').value = r;
+
   editAreaLoader.closeFile('editorInput',  editAreaLoader.getCurrentFile('editorInput').id);
   newFile();
   editAreaLoader.setValue('editorInput', r);
@@ -358,4 +330,4 @@ var enableRec = function () {
 }
 var disableRec = function () {
   MozMillrec.off();
-}
\ No newline at end of file
+}
diff --git a/mozmill/extension/content/ui.js b/mozmill/extension/content/ui.js
index 2ade83a..156175f 100644
--- a/mozmill/extension/content/ui.js
+++ b/mozmill/extension/content/ui.js
@@ -1,9 +1,9 @@
 var utils = {}; Components.utils.import('resource://mozmill/modules/utils.js', utils);
 
-var showInspectDialog = function(){
-  $("#inspectDialog").dialog("open");
-  MozMilldx.dxOn();
-  $("#inspectDialog").dialog().parents(".ui-dialog:first").find(".ui-dialog-buttonpane button")[2].innerHTML = "Stop";
+var copyInspector = function() {
+  MozMilldx.inspectorToClipboard();
+  $("#tabs").tabs().tabs("select", 0);
+  $('#textarea')[0].focus();
 }
 
 var showFileDialog = function(){
diff --git a/mozmill/extension/resource/modules/frame.js b/mozmill/extension/resource/modules/frame.js
index 4cfc127..96feb1f 100644
--- a/mozmill/extension/resource/modules/frame.js
+++ b/mozmill/extension/resource/modules/frame.js
@@ -569,4 +569,4 @@ var runTestFile = function (filename) {
 
 var getThread = function () {
   return thread;
-}
\ No newline at end of file
+}
diff --git a/mozmill/extension/resource/modules/inspection.js b/mozmill/extension/resource/modules/inspection.js
index 0b5dc45..965672f 100644
--- a/mozmill/extension/resource/modules/inspection.js
+++ b/mozmill/extension/resource/modules/inspection.js
@@ -329,11 +329,14 @@ var inspectElement = function(e){
   
   //Element highlighting
   try {
-      if (this.lastEvent){
-        this.lastEvent.target.style.outline = "";
-      }
-      this.lastEvent = e;
-      e.target.style.outline = "1px solid darkblue";
+    if (this.lastEvent)
+      this.lastEvent.target.style.outline = "";
+  } catch(err) {}
+  
+  this.lastEvent = e;
+  
+  try {
+     e.target.style.outline = "1px solid darkblue";
   } catch(err){}
 
   var _document = getDocument(target);
